@{
    ViewBag.Title = "ListUsers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using TimeCard.Models
@using TimeCard.Helping_Classes
@using TimeCard.BL
@model IEnumerable<TimeCard.Models.User>
@{
    SessionDTO sdto = new SessionDTO();
}

<style>

    h3, h4 {
        color: #2a2b6e;
    }
</style>

<div class="row">
    <div class="col-xs-12">
        <h3 class="header"><strong>List Employees</strong></h3>
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>

        <!-- div.table-responsive -->
        <!-- div.dataTables_borderWrap -->
        <div class="table-responsive" style="background-color:#EFF3F8;">
            <table id="myTable" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Phone</th>
                        <th>Phone Email</th>
                        <th>Manager</th>
                        <th>Action</th>
                    </tr>
                </thead>

                @*<tbody>
                        @foreach (User u in Model.Where(x => x.Role == 0).ToList())
                        {
                            <tr>
                                <td>@u.FirstName</td>
                                <td>@u.LastName</td>
                                <td>@u.Email</td>
                                <td>@u.Password</td>
                                <td>@u.Phone</td>
                                <td>@u.PhoneMail</td>
                                    @if (u.User_Id == null)
                                    {
                                        <td>Not Assigned</td>
                                    }
                                    else
                                    {
                                        User manager = new UserBL().getUserById(Convert.ToInt32(u.User_Id));
                                        <td>@manager.FirstName &nbsp; @manager.LastName</td>
                                    }

                                <td>
                                    &nbsp; <a class="green" href="@Url.Action("EditUser","User", new { Id = u.Id })">
                                        <i class="ace-icon fa fa-pencil bigger-160"></i>
                                    </a> &nbsp; &nbsp; &nbsp;
                                    <a class="red" onclick="DeleteEmployee(@u.Id)" data-toggle="modal" data-target="#deleteModal">
                                        <i class="ace-icon fa fa-trash-o bigger-160"></i>
                                    </a>
                                </td>
                            </tr>
                                    }
                    </tbody>*@
            </table>
        </div>
    </div>
</div>
<br />
<br />
<div class="row">
    <div class="col-xs-12">
        <h3 class="header"><strong>List Managers</strong></h3>
        <div class="clearfix">
            <div class="pull-right tableTools-container"></div>
        </div>

        <!-- div.table-responsive -->
        <!-- div.dataTables_borderWrap -->
        <div class="table-responsive" style="background-color:#EFF3F8;">
            <table id="myTable2" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Phone</th>
                        <th>Phone Email</th>
                        <th>Manager</th>
                        <th>Action</th>
                    </tr>
                </thead>

                @*<tbody>
                        @foreach (User u in Model.Where(x=> x.Role == 1).ToList())
                        {
                            <tr>
                                <td>@u.FirstName</td>
                                <td>@u.LastName</td>
                                <td>@u.Email</td>
                                <td>@u.Password</td>
                                <td>@u.Phone</td>
                                <td>@u.PhoneMail</td>
                                @if (u.User_Id == null)
                                {
                                    <td>Not Assigned</td>
                                }
                                else
                                {
                                    User manager = new UserBL().getUserById(Convert.ToInt32(u.User_Id));
                                    <td>@manager.FirstName &nbsp; @manager.LastName</td>
                                }

                                <td>
                                    &nbsp; <a class="green" href="@Url.Action("EditUser","User", new { Id = u.Id })">
                                        <i class="ace-icon fa fa-pencil bigger-160"></i>
                                    </a> &nbsp; &nbsp; &nbsp;
                                    <a class="red" onclick="DeleteEmployee(@u.Id)" data-toggle="modal" data-target="#deleteModal">
                                        <i class="ace-icon fa fa-trash-o bigger-160"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>*@
            </table>
        </div>
    </div>
</div>



<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><strong>Warning</strong></h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this user?</p>
            </div>
            <div class="modal-footer">
                <form class="form-horizontal form-label-left" method="post" action="@Url.Action("ToggleUser", "User")">
                    <input type="hidden" name="Id" id="userId" />
                    <button type="button" class="btn btn-danger" data-dismiss="modal">NO</button>
                    <button type="submit" class="btn btn-primary">YES</button>
                </form>
            </div>
        </div>

    </div>
</div>


<!-- projects list Modal -->
<div class="modal fade" id="projectModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title text-center"><strong>Projects List</strong></h4>
            </div>
            <form action="@Url.Action("PostAddUserProjectReport","User")" method="post">
                <input type="hidden" name="UserId" id="addUserId" />
                <input type="hidden" name="Count" id="addCount" />
            <div class="modal-body">
                <div class="row" id="projectModalBody">
                    

                </div>
            </div>
            <div class="modal-footer">
                    <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit</button>
            </div>
                
            </form>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#myTable').DataTable(
            {
                "ajax": {
                    "url": '@Url.Action("GetEmployeesDataTable","User")',
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "FirstName", "name": "FirstName" },
                    { "data": "LastName", "name": "LastName" },
                    { "data": "Email", "name": "Email" },
                    { "data": "Password", "name": "Password" },
                    { "data": "Phone", "name": "Phone" },
                    { "data": "PhoneMail", "name": "PhoneMail" },
                    { "data": "Manager", "name": "Manager" },
                    { "data": "Id", "name": "Id" }

                ],

                'columnDefs': [
                    {
                        render: function (data, type, full, meta)
                        {
                            if (full.IsChecked == "1099") {
                                return '<i class="text-info ace-icon fa fa-check" title="' + full.IsChecked + '"></i>&nbsp;' + full.FirstName + '';
                            }
                            else {
                                return full.FirstName;
                            }
                        },
                        targets: 0
                    },
                    {
                        render: function (data, type, full, meta) {
                           return ` &nbsp; <a class="green" href="../User/EditUser?Id=` + full.Id + `">
                                    <i class="ace-icon fa fa-pencil bigger-160"></i>
                                </a> &nbsp; &nbsp;
                                 <a class="red" onclick="DeleteEmployee(`+ full.Id +`)" data-toggle="modal" data-target="#deleteModal">
                                    <i class="ace-icon fa fa-trash-o bigger-160"></i>
                                </a> &nbsp; &nbsp;
                                <a class="orange" title="Deactivate" href="../User/DeactivateUser?Id=` + full.Id + `">
                                    <i class="ace-icon fa fa-ban bigger-160"></i>
                                </a>
                                `;
                        },
                        targets: 7
                    }
                ],
                "serverSide": "true",

                "processing": "true",
                "dom": '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
                "language":
                {
                    "processing": "Processing... Please wait",
                    "search": "<span>Filter:</span> _INPUT_",
                    "searchPlaceholder": "Type to filter...",
                    "lengthMenu": "<span>Show:</span> _MENU_",
                    "paginate": { 'first': 'First', 'last': 'Last', 'next': '&rarr;', 'previous': '&larr;' }
                }
            });
    });



    $(document).ready(function () {

        $('#myTable2').DataTable(
            {
                "ajax": {
                    "url": '@Url.Action("GetManagersDataTable","User")',
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "FirstName", "name": "FirstName" },
                    { "data": "LastName", "name": "LastName" },
                    { "data": "Email", "name": "Email" },
                    { "data": "Password", "name": "Password" },
                    { "data": "Phone", "name": "Phone" },
                    { "data": "PhoneMail", "name": "PhoneMail" },
                    { "data": "Manager", "name": "Manager" },
                    { "data": "Id", "name": "Id" }

                ],

                'columnDefs': [

                    {
                        render: function (data, type, full, meta) {
                           return ` &nbsp; <a class="green" href="../User/EditUser?Id=` + full.Id + `">
                                    <i class="ace-icon fa fa-pencil bigger-160"></i>
                                </a> &nbsp; &nbsp;
                                 <a class="red" onclick="DeleteEmployee(`+ full.Id +`)" data-toggle="modal" data-target="#deleteModal">
                                    <i class="ace-icon fa fa-trash-o bigger-160"></i>
                                </a> &nbsp; &nbsp;
                                <a class="orange" title="Deactivate" href="../User/DeactivateUser?Id=` + full.Id + `">
                                    <i class="ace-icon fa fa-ban bigger-160"></i>
                                </a>
                                </a> &nbsp; &nbsp;
                                <a class="dark" title="View Project Cost" onclick="ViewProjects(`+ full.Id +`)">
                                    <i class="ace-icon fa fa-bars bigger-160"></i>
                                </a>
                                `;
                        },
                        targets: 7
                    }
                ],
                "serverSide": "true",

                "processing": "true",
                "dom": '<"datatable-header"fl><"datatable-scroll"t><"datatable-footer"ip>',
                "language":
                {
                    "processing": "Processing... Please wait",
                    "search": "<span>Filter:</span> _INPUT_",
                    "searchPlaceholder": "Type to filter...",
                    "lengthMenu": "<span>Show:</span> _MENU_",
                    "paginate": { 'first': 'First', 'last': 'Last', 'next': '&rarr;', 'previous': '&larr;' }
                }
            });
    });

    function DeleteEmployee(Id) {
        $('#userId').val(Id);
    }



    function ViewProjects(UserId)
    {

        $.ajax({
            dataType: "json",
            type: "POST",
            url: '@Url.Action("GetActiveUserProjectsList", "User")',
            data: { UserId: UserId },
            success: function (response)
            {
                $('#addUserId').val(UserId);

                $('#projectModalBody').empty();

                var i = 0;
                $.each(response, function ()
                {
                    if (response[i].IsChecked == 1)
                    {
                        $('#projectModalBody').append('<input type="checkbox" name="IsChecked' + i + '" value="1" checked/> &nbsp;' +
                            '<span>' + response[i].Code + '</span>' +
                            '<input type="hidden" name="ProjectId' + i + '" value="' + response[i].Id + '"/><hr /> ');
                    }
                    else
                    {
                        $('#projectModalBody').append('<input type="checkbox" name="IsChecked' + i + '" value="1"/> &nbsp;' +
                            '<span>' + response[i].Code + '</span>' +
                            '<input type="hidden" name="ProjectId' + i + '" value="' + response[i].Id + '"/><hr /> ');
                    }
                    i++;
                });

                $('#addCount').val(i-1);

                $('#projectModal').modal('toggle');
            },
            error: function (response)
            {
                alert('Ajax Failed');
            }

        });
    }

</script>